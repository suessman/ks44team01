<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="anypet.ksmartteam01.mapper.AccommodationMapper">
	<resultMap 	type="AccommodationCategory" id="accommodationCategory">
		<id		column="accommodation_category_code" property="accommodationCategoryCode"/>
		<result	column="id" 						property="accommodationId"/>
		<result	column="accommodation_category_name" property="accommodationCategoryName"/>
		<result	column="registration_datetime" 		property="registrationDateTime"/>
	</resultMap>
	
	<resultMap type="AccommodationDetail" id="accommodationDetail">
		<id		column="accommodation_detail_code" property="accommodationDetailCode"/>
		
			<association property="accommodationOption" javaType="AccommodationOption">
				<id		column="goods_accommodation_option_code" property="goodsAccommodationOptionCode"/>
				<result	column="accommodation_option" 			 property="accommodationOption"/>
			</association>
			
			<association property="accommodationCategory" javaType="AccommodationCategory">
				<id		column="accommodation_category_code" property="accommodationCategoryCode"/>
				<result column="accommodation_category_name" property="accommodationCategoryName"/>
			</association>
			
			<association property="companyMember" javaType="CompanyMember">
				<id		column="company_member_code" property="companyMemberCode"/>
				<result column="company_name" 	 	 property="companyName"/>
				<result column="company_phone" 	 	 property="companyPhone"/>
				<result column="company_address" 	 property="companyAddress"/>
			</association>
	</resultMap>
	
	<!-- 숙소정보 조회 -->
	<select id="getAccommodationDetailInfo" parameterType="String" resultMap="accommodationDetail">
		SELECT 		
			 c.accommodation_category_name
			,m.company_name	
			,g.accommodation_option				
			,m.company_phone						
			,m.company_address		
		FROM 
			accommodation_detail AS d
			INNER JOIN
			accommodation_category AS c
			ON
			d.accommodation_category_code = c.accommodation_category_code
			INNER JOIN
			company_member	AS m
			ON
			d.company_member_code = m.company_member_code
			INNER JOIN
			goods_accommodation_option AS g
			ON
			g.accommodation_detail_code = d.accommodation_detail_code
		WHERE 
			g.goods_accommodation_option_code = #{goodsAccommodationOptionCode};
	</select>
	
	<!-- 회원정보 조회 -->
	<select id="getReservaionMemberInfo" resultType="Member">
		SELECT 
 			 m.id				AS memberId
			,m.name				AS memberName
			,m.phone			AS memberPhone
			,m.email			AS memberEmail
		FROM 
			member AS m
		WHERE 
			m.id = #{memberId};
	</select>
	
	<!-- 숙소 관리자 결제취소 -->
	<insert id="adminPaymentCancel" parameterType="AccommodationPaymentCancel">
		<selectKey keyProperty="accommodationPaymentCancelCode" resultType="String" order="BEFORE">
 			SELECT 
				(CASE 
					WHEN COUNT(accommodation_payment_cancel_code) = 0 THEN 'apcc001'
					WHEN MAX(CAST(SUBSTRING_INDEX(accommodation_payment_cancel_code, 'apcc', -1) AS UNSIGNED)) > 999
						THEN CONCAT('apcc', MAX(CAST(SUBSTRING_INDEX(accommodation_payment_cancel_code,'apcc',-1) AS UNSIGNED))+1)
					ELSE CONCAT('apcc', LPAD(MAX(CAST(SUBSTRING_INDEX(accommodation_payment_cancel_code,'apcc',-1) AS UNSIGNED))+1,3,0))
				 END
				)AS accommodationPaymentCancelCode
			FROM
				accommodation_payment_cancel			
		</selectKey>
		INSERT INTO accommodation_payment_cancel
			(accommodation_payment_cancel_code 
			,accommodation_payment_number
			,id
			,accommodation_reservation_number 
			,accommodation_payment_cancel_datetime 
			,accommodation_payment_cancel_reason
			,accommodation_payment_cancel_approval
			,accommodation_payment_cancel_approval_datetime)
		VALUES 
			( #{accommodationPaymentCancelCode}
			 ,#{accommodationPaymentCode}
			 ,'id001'
			 ,(SELECT
					p.accommodation_reservation_number
				FROM
					accommodation_payment AS p
				WHERE 
					p.accommodation_payment_number = #{accommodationPaymentCode})
			 ,NOW()
			 ,'관리자취소'
			 ,'Y'
			 ,NOW()
			 );
	</insert>
	
	<!-- 숙소 결제내역 조회 -->
	<select id="getAccommodationPayment" resultType="AccommodationPayment">
		SELECT 
			 p.accommodation_payment_number			AS accommodationPaymentCode		
			,p.accommodation_reservation_number 		AS accommodationReservationNumber		
			,p.personal_member_code					AS personalMemberCode								
			,p.accommodation_payment_term			AS accommodationPaymentTerm		 	
			,p.accommodation_payment_date			AS accommodationPaymentDate
			,p.accommodation_mothly_payment			AS accommodationMothlyPayment
			,p.accommodation_payment_bank			AS accommodationPaymentBank
			,p.purchased_point						AS purchasedPoint
		FROM 
			accommodation_payment AS p
		WHERE
			p.accommodation_payment_number = #{accommodationPaymentCode};
	</select>
	
	<!-- 숙소 결제취소 승인 -->
	<update id="updatePaymentCancel" parameterType="AccommodationPaymentCancel">
		UPDATE 
			accommodation_payment_cancel
		<trim prefix="SET">
			accommodation_payment_cancel_approval ='Y'
		</trim>
		WHERE 
			accommodation_payment_cancel_code= #{accommodationPaymentCancelCode};
	</update>
	
	<!-- 숙소 예약내역 삭제 -->
	<update id="removeReservationList" parameterType="AccommodationReservationList">
		UPDATE 
			accommodation_reservation
		<trim prefix="SET">
			reservation_delete = 1
		</trim>
		WHERE
			accommodation_reservation_number = #{accommodationReservationCode};
	</update>
	
	<!-- 숙소 예약내역 조회  -->
	<select id="reservationList" resultType="AccommodationReservationList">
	SELECT 
		 r.accommodation_reservation_number 		AS accommodationReservationCode
		,r.accommodation_detail_code				AS accommodationDetailCode
		,r.goods_accommodation_option_code			AS goodsAccommodationOptionCode
		,r.id 										AS id
		,r.accommodation_date 						AS reservationDatetime					
		,r.checkin_date 							AS checkinDatetime		
		,r.checkout_date 							AS checkoutDatetime				
		,r.reservation_people 						AS totalNumber	
		,r.payment_amount							AS paymentAmount	
		,r.using_point 								AS usingPoint							
		,r.total_payment_price 						AS totalPaymentPrice
		,p.accommodation_payment_number				AS accommodationPaymentCode
		,c.accommodation_payment_cancel_code		AS accommodationPaymentCancelCode
		,c.accommodation_payment_cancel_approval	AS accommodationPaymentCancelApproval								
	FROM
		accommodation_reservation AS r
		LEFT OUTER JOIN
		accommodation_payment AS p
		ON 
		r.accommodation_reservation_number = p.accommodation_reservation_number
		LEFT OUTER JOIN
		accommodation_payment_cancel AS c
		ON 
		c.accommodation_reservation_number = r.accommodation_reservation_number
	WHERE
		r.reservation_delete = 0;
	</select>
	
	<!-- 숙소 문의사항 삭제 -->
	<delete id="removeInquiry" parameterType="String">
		DELETE
		FROM
		 accommodation_QnA
		WHERE 
		 accommodation_QnA_number = #{accommodationQnaNumber};
	</delete>
	
	<!-- 숙소 문의사항 답변 수정 -->
	<update id="modifyInquiry" parameterType="AccommodationInquiry">
		UPDATE accommodation_QnA
		<trim prefix="SET" prefixOverrides=",">
			<if test="answer != null and answer != ''">
				,accommodation_QnA_answer = #{answer}
			</if>
			,accommodation_QnA_answer_datetime=NOW()
		</trim>
	WHERE 
		accommodation_QnA_number = #{accommodationQnaNumber};
	</update>
	
	<!-- 숙소 문의사항 답변 조회 -->
	<select id="inquiryAnswerSelect" resultType="AccommodationInquiry">
		SELECT 
			 accommodation_QnA_number	AS accommodationQnaNumber
			,accommodation_QnA_answer	AS answer
		FROM 
			accommodation_QnA
		WHERE 
			accommodation_QnA_number = #{accommodationQnaNumber};
	</select>
	
	<!-- 숙소 문의사항 목록 조회 -->
	<select id="inquiryList" resultType="AccommodationInquiry">
		SELECT
			q.accommodation_QnA_number					AS accommodationQnaNumber
			,m.company_name								AS companyName
			,q.id										AS inquiryId
			,q.accommodation_QnA_title					AS titleName
			,q.accommodation_QnA_datetime				AS datetime
			,d.id										AS answerId
			,q.accommodation_QnA_answer_datetime			AS answerDatetime
			,q.accommodation_QnA_contents				AS contents
			,q.accommodation_QnA_answer					AS answer
			,q.accommodation_QnA_number					AS inquiryCode
		FROM
			accommodation_QnA AS q
			INNER JOIN
			accommodation_detail AS d
			ON 
			q.accommodation_detail_code = d.accommodation_detail_code
			INNER JOIN
			company_member AS m
			ON
			d.company_member_code = m.company_member_code;
	</select>
	
	<!-- 특정 숙소 카테고리 조회  -->
	<select id="getCategoryInfo" resultMap="accommodationCategory" parameterType="String">
		SELECT 
			 accommodation_category_code 
			,id
			,accommodation_category_name 
			,registration_datetime
		FROM
			accommodation_category
		WHERE 
			accommodation_category_code = #{accommodationCategoryCode};
	</select>	
	
	<!-- 숙소 카테고리 삭제 -->
	<delete id="removeCategory" parameterType="String">
		DELETE 
		FROM 
			accommodation_category
		WHERE
			accommodation_category_code = #{accommodationCategoryCode};
	</delete>
	
	<!-- 숙소 카테고리 수정 -->
	<update id="updateCategory" parameterType="AccommodationCategory">
		UPDATE accommodation_category
		<trim prefix="SET">
			<if test="accommodationCategoryName != null and accommodationCategoryName != ''">
				accommodation_category_name	= #{accommodationCategoryName}
			</if>
		</trim>
		WHERE
			accommodation_category_code= #{accommodationCategoryCode};
	</update>
	
	<!-- 숙소 카테고리 등록 -->
	<insert id="insertCategory" parameterType="AccommodationCategory">
		<selectKey keyProperty="accommodationCategoryCode" resultType="String" order="BEFORE">
 			SELECT 
				(CASE 
					WHEN COUNT(c.accommodation_category_code) = 0 THEN 'acc001'
					WHEN MAX(CAST(SUBSTRING_INDEX(c.accommodation_category_code, 'acc', -1) AS UNSIGNED)) > 999
						THEN CONCAT('acc', MAX(CAST(SUBSTRING_INDEX(c.accommodation_category_code,'acc',-1) AS UNSIGNED))+1)
					ELSE CONCAT('acc', LPAD(MAX(CAST(SUBSTRING_INDEX(c.accommodation_category_code,'acc',-1) AS UNSIGNED))+1,3,0))
				 END
				)AS accommodationCategoryCode
			FROM
				accommodation_category AS c			
		</selectKey>	
		INSERT INTO accommodation_category
			(accommodation_category_code, 
			 id, 
			 accommodation_category_name, 
			 registration_datetime)
		VALUES 
			(#{accommodationCategoryCode}, 
			 'id001', 
			 #{accommodationCategoryName}, 
			 NOW());
	</insert>
	
	<!-- 숙소 카테고리 목록 조회 -->
	<select id="categoryList" resultMap="accommodationCategory">
		SELECT 
			accommodation_category_code, 
			id, 
			accommodation_category_name, 
			registration_datetime
		FROM 
			accommodation_category;
	</select>
  </mapper>